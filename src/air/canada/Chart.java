/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package air.canada;

import java.util.ArrayList;
import java.io.File;
import javax.swing.*;
import java.awt.Color;
import java.io.IOException;


/**
 * @author sprince
 */
public class Chart extends javax.swing.JFrame {
    ArrayList<ArrayList> nameList = new ArrayList();
    File nameSave = new File("nameList.txt");

    /**
     * Creates new form Chart
     */
    public Chart() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    //each seat (a1 - h10) has same code as a1
    private void a1ActionPerformed(java.awt.event.ActionEvent evt) {

        //Brings up message
        //String - text
        //info message showing choosen dialog, named Information Required
        String firstName = JOptionPane.showInputDialog(null, "Please enter your first name.", "Information Required", JOptionPane.INFORMATION_MESSAGE);

        // if input is empty, exit
        if (firstName.isEmpty()) {

        } else {

            System.out.println(firstName);

            //Brings up message
            //String - text
            //info message showing choosen dialog, named Information Required
            String lastName = JOptionPane.showInputDialog(null, "Please enter your last name.", "Information Required", JOptionPane.INFORMATION_MESSAGE);

            // if input is empty, exit
            if (lastName.isEmpty()) {

            } else {

                System.out.println(lastName);
                //output, ___ has been assigned to seat
                JOptionPane.showMessageDialog(rootPane, firstName + " " + lastName + " has been assigned to seat A1!", "YAY", JOptionPane.INFORMATION_MESSAGE);

                //change colour of button
                buttons[0][0].setBackground(Color.red);
                //keep text black
                buttons[0][0].setForeground(Color.black);
                //change text to X
                buttons[0][0].setText("X");

            }
        }

    }

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {
        //exit program
        System.exit(0);
    }

    private void manifestActionPerformed(java.awt.event.ActionEvent evt) {

        //output
        JOptionPane.showMessageDialog(rootPane, "Added to Manifest!");

    }

    private void waitlistActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:


        //output
        JOptionPane.showMessageDialog(rootPane, "Added to Waitlist!");


    }

    public void checkFile() {
        try {
            if (nameSave.exists() == false) {
                nameSave.createNewFile();
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(rootPane, "File not found");
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Chart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    JButton[][] buttons = new JButton[8][10];
    JLabel[] aisleLabels = new JLabel[10];
    private javax.swing.JLabel chartLbl;
    private javax.swing.JButton exitBtn;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    JMenu[] jMenus = new JMenu[12];
    JMenuBar[] menuBar = new JMenuBar[6];
    private javax.swing.JButton manifest;
    private javax.swing.JButton waitlist;
    // End of variables declaration


    private void initComponents() {
        char[] alphabets = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'};
        for (int i = 0; i < 8; i++) {
            for (int j = 0; j < 10; j++) {
                buttons[i][j] = new JButton(alphabets[i] + "" + (j + 1));
            }
        }

        for (int i = 0; i < aisleLabels.length; i++) {
            aisleLabels[i] = new JLabel("aisle" + (i + 1));
        }

        chartLbl = new JLabel("Chart");
        exitBtn = new JButton("Exit");

        jCheckBoxMenuItem1 = new JCheckBoxMenuItem("Item 1");
        jCheckBoxMenuItem2 = new JCheckBoxMenuItem("Item 2");

        for(int i=0;i<jMenus.length;i++){
            jMenus[i] = new JMenu();
        }

        for (int i=0;i<menuBar.length;i++){
            menuBar[i] = new JMenuBar();

        }

        manifest = new JButton("Manifest");
        waitlist = new JButton("Wait list");

    }

}
   